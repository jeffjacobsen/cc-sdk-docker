# Claude Code OAuth Token
# Get your token by running: claude setup-token
# Or from: https://claude.ai/settings
CLAUDE_CODE_OAUTH_TOKEN=sk-ant-oat01-your-token-here

# Optional: Anthropic API Key (for direct API access comparison)
# ANTHROPIC_API_KEY=sk-ant-your-api-key-here

# Port configuration (default: 3000)
# Change this if port 3000 is already in use
PORT=3000

# TELEGRAM BOT CONFIGURATION
# ---------------------------
# Required for the Telegram bot integration (telegram_bot.py)
# Get your bot token from @BotFather on Telegram:
#   1. Message @BotFather on Telegram
#   2. Use /newbot command to create a new bot
#   3. Follow instructions and copy the token provided
# TELEGRAM_BOT_API_KEY=your_telegram_bot_token_here

# Optional: Telegram bot working directory
# TELEGRAM_WORKING_DIRECTORY=/workspace
# TELEGRAM_WORKSPACE=./workspace


# SLACK BOT CONFIGURATION
# -----------------------
# Required for the Slack bot integration (slack_bot.py)
# Get your tokens from https://api.slack.com/apps:
#   1. Create new app at https://api.slack.com/apps
#   2. Configure OAuth & Permissions → Get Bot User OAuth Token (xoxb-...)
#   3. Enable Socket Mode → Generate App-Level Token (xapp-...)
#   4. See server/SLACK_SETUP.md for detailed setup instructions
# SLACK_BOT_TOKEN=xoxb-your-bot-token-here
# SLACK_APP_TOKEN=xapp-your-app-token-here

# Optional: Slack bot working directory
# SLACK_WORKING_DIRECTORY=/workspace
# SLACK_WORKSPACE=./workspace


# Optional: Enable file-based logging
# When set to true, logs SDK requests/responses to logs/ directory in JSONL format
# FILE_LOGGING=false

# Optional: Enable console debug logging
# DEBUG=false


